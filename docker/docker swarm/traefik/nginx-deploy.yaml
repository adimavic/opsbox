version: '3.7'
services:
  nginx:
   image: nginx:latest
   labels:
      - "traefik.enable=true"
      - "traefik.docker.lbswarm=true"
      - "traefik.http.routers.nginx.entrypoints=websecure,web"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      - "traefik.http.routers.nginx.rule=Host(`opsbox.tech`)"   #Replae the DNS name
      - "traefik.http.routers.nginx.tls=true" # Traefik Default cert
     # - "traefik.http.routers.nginx.tls.certresolver=staging" # Staging cert will be generated 
      - "traefik.http.routers.nginx.tls.certresolver=production" # Production cert will be generated

   deploy:
     restart_policy:
       condition: on-failure
       delay: 5s
       max_attempts: 3
       window: 120s
     mode: replicated
     resources:
       limits:
        cpus: '1'
        memory: 500M
     replicas: 1
     placement:
        constraints:
        - "node.labels.master==true"          #Label on the node
  


  traefik:
   image: traefik:v2.10.7
   ports:
      - 80:80
      - 443:443
   volumes:
      - /home/arch/traefik/traefik.yml:/etc/traefik/traefik.yml #Mount traefik configuration file
      - /ssl:/ssl-certs #Persiatnce volume for generated certs
      - /var/run/docker.sock:/var/run/docker.sock:ro  #Mount docker socker with the deamon docker socket

   deploy:
     restart_policy:
       condition: on-failure
       delay: 5s
       max_attempts: 3
       window: 120s
     mode: replicated
     resources:
       limits:
        cpus: '1'
        memory: 500M
     replicas: 1
     placement:
        constraints:
        - "node.labels.master==true"









